name: CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Verify Node.js and npm versions
      run: |
        node --version
        npm --version
    
    - name: Clean install dependencies
      run: |
        # Remove node_modules and package-lock if they exist from cache
        rm -rf node_modules package-lock.json || true
        npm install
        npm ci
    
    - name: Run linter
      run: npm run lint || true
    
    - name: Build
      run: npm run build
    
    - name: Run tests
      run: npm test

  publish:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        registry-url: 'https://registry.npmjs.org'
        cache: 'npm'
    
    - name: Clean install dependencies
      run: |
        rm -rf node_modules package-lock.json || true
        npm install
    
    - name: Build
      run: npm run build
    
    - name: Publish to NPM
      run: npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
